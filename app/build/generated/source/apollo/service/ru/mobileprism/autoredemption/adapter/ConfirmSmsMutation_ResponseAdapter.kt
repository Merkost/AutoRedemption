//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.6.0'.
//
package ru.mobileprism.autoredemption.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import ru.mobileprism.autoredemption.ConfirmSmsMutation

public object ConfirmSmsMutation_ResponseAdapter {
  public object Data : Adapter<ConfirmSmsMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("confirmSms")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConfirmSmsMutation.Data {
      var _confirmSms: ConfirmSmsMutation.ConfirmSms? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _confirmSms = ConfirmSms.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConfirmSmsMutation.Data(
        confirmSms = _confirmSms
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConfirmSmsMutation.Data,
    ): Unit {
      writer.name("confirmSms")
      ConfirmSms.obj().nullable().toJson(writer, customScalarAdapters, value.confirmSms)
    }
  }

  public object ConfirmSms : Adapter<ConfirmSmsMutation.ConfirmSms> {
    public val RESPONSE_NAMES: List<String> = listOf("token", "user")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConfirmSmsMutation.ConfirmSms {
      var _token: String? = null
      var _user: ConfirmSmsMutation.User? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _token = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _user = User.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConfirmSmsMutation.ConfirmSms(
        token = _token!!,
        user = _user!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConfirmSmsMutation.ConfirmSms,
    ): Unit {
      writer.name("token")
      StringAdapter.toJson(writer, customScalarAdapters, value.token)

      writer.name("user")
      User.obj().toJson(writer, customScalarAdapters, value.user)
    }
  }

  public object User : Adapter<ConfirmSmsMutation.User> {
    public val RESPONSE_NAMES: List<String> = listOf("_id", "phone", "createdAt",
        "subscriptionStatus", "firstname", "lastname")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConfirmSmsMutation.User {
      var __id: String? = null
      var _phone: String? = null
      var _createdAt: String? = null
      var _subscriptionStatus: ConfirmSmsMutation.SubscriptionStatus? = null
      var _firstname: String? = null
      var _lastname: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _phone = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _createdAt = StringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _subscriptionStatus = SubscriptionStatus.obj().fromJson(reader, customScalarAdapters)
          4 -> _firstname = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _lastname = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConfirmSmsMutation.User(
        _id = __id!!,
        phone = _phone!!,
        createdAt = _createdAt!!,
        subscriptionStatus = _subscriptionStatus!!,
        firstname = _firstname,
        lastname = _lastname
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConfirmSmsMutation.User,
    ): Unit {
      writer.name("_id")
      StringAdapter.toJson(writer, customScalarAdapters, value._id)

      writer.name("phone")
      StringAdapter.toJson(writer, customScalarAdapters, value.phone)

      writer.name("createdAt")
      StringAdapter.toJson(writer, customScalarAdapters, value.createdAt)

      writer.name("subscriptionStatus")
      SubscriptionStatus.obj().toJson(writer, customScalarAdapters, value.subscriptionStatus)

      writer.name("firstname")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.firstname)

      writer.name("lastname")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.lastname)
    }
  }

  public object SubscriptionStatus : Adapter<ConfirmSmsMutation.SubscriptionStatus> {
    public val RESPONSE_NAMES: List<String> = listOf("isActive", "subscriptionEnds")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        ConfirmSmsMutation.SubscriptionStatus {
      var _isActive: Boolean? = null
      var _subscriptionEnds: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _isActive = BooleanAdapter.fromJson(reader, customScalarAdapters)
          1 -> _subscriptionEnds = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return ConfirmSmsMutation.SubscriptionStatus(
        isActive = _isActive!!,
        subscriptionEnds = _subscriptionEnds!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: ConfirmSmsMutation.SubscriptionStatus,
    ): Unit {
      writer.name("isActive")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.isActive)

      writer.name("subscriptionEnds")
      StringAdapter.toJson(writer, customScalarAdapters, value.subscriptionEnds)
    }
  }
}

plugins {
    id 'com.android.application'
    id 'kotlin-parcelize'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android'
    id "com.apollographql.apollo3" version "3.6.0"
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "ru.mobileprism.autobot"
        minSdk 24
        targetSdk 33
        versionCode 8
        versionName "0.0.8"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = compose_compiler
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'ru.mobileprism.autobot'
}

dependencies {
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.3.2'
    implementation 'com.google.firebase:firebase-analytics-ktx:21.2.0'
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"

    //Sms code auto-input
    api 'com.google.android.gms:play-services-auth:20.4.0'
    api 'com.google.android.gms:play-services-auth-api-phone:18.0.1'

    implementation 'com.github.FunkyMuse:Crashy:1.2.0'

    implementation 'androidx.core:core-ktx:1.9.0'

    implementation 'cat.ereza:customactivityoncrash:2.4.0'

    // Import the Compose BOM
    api platform('androidx.compose:compose-bom:2022.10.00')
    api "androidx.compose.foundation:foundation"
    api "androidx.compose.foundation:foundation-layout"
    api "androidx.compose.ui:ui"
    api "androidx.compose.ui:ui-util"
    api "androidx.compose.runtime:runtime"
    api "androidx.compose.material:material"
    api "androidx.compose.animation:animation"
    api "androidx.compose.material:material-icons-extended"
    api "androidx.compose.material3:material3"


    // Tooling support (Previews, etc.)
    debugApi "androidx.compose.ui:ui-tooling"
    debugApi "androidx.compose.ui:ui-tooling-preview"

    // UI Tests
    debugApi "androidx.compose.ui:ui-test-junit4"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation("com.googlecode.libphonenumber:libphonenumber:7.0.4")

    def work_version = "2.7.1"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - Multiprocess support
    implementation "androidx.work:work-multiprocess:$work_version"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation 'androidx.preference:preference-ktx:1.2.0' //support fo SharedPrefs
    //implementation "androidx.datastore:datastore-preferences-core:1.0.0"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6"

    //Navigation
    implementation "androidx.navigation:navigation-compose:2.5.3"

//    implementation 'com.google.dagger:hilt-android:2.43.2'
//    kapt 'com.google.dagger:hilt-compiler:2.43.2'


    //APOLLO GRAPHQL
    implementation("com.apollographql.apollo3:apollo-runtime:3.6.0")

    // optional: if you want to use the normalized cache
    implementation("com.apollographql.apollo3:apollo-normalized-cache-sqlite:3.6.0")
    // optional: if you just want the generated models and parsers and write your own HTTP code/cache code, you can remove apollo-runtime
    // and use apollo-api instead
    //implementation("com.apollographql.apollo3:apollo-api:3.6.0")

    //KOIN DEPENDENCY INJECTION

    // Current version
    def koin_version = '3.1.4'
    // Koin Core features
    implementation "io.insert-koin:koin-core:$koin_version"
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin_version"
    // Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    // Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    // Navigation Graph
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"
    // Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"


    //ConstraintLayout
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    //SplashScreen
    implementation "androidx.core:core-splashscreen:1.0.0"

    //Accompanist
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"


    //CollectAsStateWithLifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha03"

    //MaterialTheme
    implementation 'com.google.android.material:material:1.7.0'

}

apollo {
    packageName.set("ru.mobileprism.autobot")
    generateKotlinModels.set(true)
}

/*
tasks.register("downloadSchema", ApolloDownloadSchemaTask::class.java) {
    endpoint.set("https://blah/etc")
    schema.set("common/models/src/main/graphql/ru/mobileprism/autoredemption/schema.graphqls")
}
*/
